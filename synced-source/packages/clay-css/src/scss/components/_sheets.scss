////
/// @group sheet
////

.sheet {
	background-color: $sheet-bg;
	border-color: $sheet-border-color;
	border-style: $sheet-border-style;
	border-width: $sheet-border-width;

	@include border-radius($sheet-border-radius);

	padding-bottom: $sheet-padding-bottom;
	padding-left: $sheet-padding-left;
	padding-right: $sheet-padding-right;
	padding-top: $sheet-padding-top;

	@include clay-scale-component {
		padding-bottom: $sheet-padding-bottom-mobile;
		padding-left: $sheet-padding-left-mobile;
		padding-right: $sheet-padding-right-mobile;
		padding-top: $sheet-padding-top-mobile;
	}

	&::after {
		content: '';
		display: block;
		margin-top: $sheet-padding-top;

		@include clay-scale-component {
			margin-top: $sheet-padding-top-mobile;
		}
	}

	+ .sheet {
		@include clay-css($sheet-plus-sheet);
	}

	.component-title {
		color: inherit;
		display: inline-block;
		font-size: inherit;
		font-weight: inherit;
		max-width: 100%;
	}

	.panel-group {
		&,
		.panel:last-child .panel-body {
			margin-bottom: $sheet-panel-group-margin-bottom;

			@include clay-scale-component {
				margin-bottom: $sheet-panel-group-margin-bottom-mobile;
			}
		}

		.panel-body {
			margin-bottom: $sheet-section-margin-bottom;

			@include clay-scale-component {
				margin-bottom: $sheet-section-margin-bottom-mobile;
			}
		}
	}
}

.sheet-row {
	@include clay-css($sheet-row);

	@if (map-get($sheet-row, media-breakpoint-up)) {
		@each $breakpoint in map-keys(map-get($sheet-row, media-breakpoint-up))
		{
			$media-breakpoint-up: map-deep-get(
				$sheet-row,
				media-breakpoint-up,
				$breakpoint
			);

			@if ($breakpoint) {
				@include media-breakpoint-up($breakpoint) {
					@include clay-css($media-breakpoint-up);
				}
			}
		}
	}

	@if (map-get($sheet-row, media-breakpoint-down)) {
		@each $breakpoint
			in map-keys(map-get($sheet-row, media-breakpoint-down))
		{
			$media-breakpoint-down: map-deep-get(
				$sheet-row,
				media-breakpoint-down,
				$breakpoint
			);

			@if ($breakpoint) {
				@include media-breakpoint-down($breakpoint) {
					@include clay-css($media-breakpoint-down);
				}
			}
		}
	}
}

.sheet-header {
	margin-bottom: $sheet-header-margin-bottom;

	@include clay-scale-component {
		margin-bottom: $sheet-header-margin-bottom-mobile;
	}

	&::after {
		clear: both;
		content: '';
		display: block;
	}
}

.sheet-section {
	margin-bottom: $sheet-section-margin-bottom;

	@include clay-scale-component {
		margin-bottom: $sheet-section-margin-bottom-mobile;
	}

	> fieldset {
		margin-bottom: math-sign($sheet-section-margin-bottom);

		@include clay-scale-component {
			margin-bottom: math-sign($sheet-section-margin-bottom-mobile);
		}
	}

	> .card-page:last-child,
	.card-page-last {
		margin-bottom: math-sign(
			if(variable-exists(card-margin-bottom), $card-margin-bottom, 1.5rem)
		);
	}

	&::after {
		clear: both;
		content: '';
		display: block;
	}
}

fieldset {
	+ .sheet-footer {
		margin-top: 0;
	}
}

.sheet-footer {
	display: flex;
	margin-bottom: $sheet-footer-margin-bottom;
	margin-left: $sheet-footer-margin-left;
	margin-right: $sheet-footer-margin-right;
	margin-top: $sheet-footer-margin-top;

	@include clay-scale-component {
		margin-bottom: $sheet-footer-margin-bottom-mobile;
		margin-left: $sheet-footer-margin-left-mobile;
		margin-right: $sheet-footer-margin-right-mobile;
		margin-top: $sheet-footer-margin-top-mobile;
	}

	&::after {
		clear: both;
		content: '';
		display: block;
	}
}

.sheet-footer-btn-block-sm-down {
	@include sheet-footer-btn-block($sheet-footer-btn-block-sm-down);
}

// Sheet Sizes

/// @deprecated as of v3.x use `.container .sheet` instead

.sheet-lg {
	margin-left: auto;
	margin-right: auto;
	max-width: $sheet-lg-max-width;
}

// Sheet Title

.sheet-title {
	color: $sheet-title-color;
	display: block;
	font-size: $sheet-title-font-size;
	font-weight: $sheet-title-font-weight;
	line-height: $sheet-title-line-height;
	margin-bottom: $sheet-title-margin-bottom;
	word-wrap: break-word;

	@include clay-scale-component {
		font-size: $sheet-title-font-size-mobile;
		margin-bottom: $sheet-title-margin-bottom-mobile;
	}

	.autofit-padded-no-gutters {
		@extend %#{$sheet-title-autofit-padded-no-gutters-ext} !optional;
	}
}

// Sheet Subtitle

.sheet-subtitle {
	border-color: $sheet-subtitle-border-color;
	border-style: $sheet-subtitle-border-style;
	border-width: $sheet-subtitle-border-width;
	color: $sheet-subtitle-color;
	display: block;
	font-size: $sheet-subtitle-font-size;
	font-weight: $sheet-subtitle-font-weight;
	line-height: $sheet-subtitle-line-height;
	margin-bottom: $sheet-subtitle-margin-bottom;
	padding-bottom: $sheet-subtitle-padding-y;
	padding-left: $sheet-subtitle-padding-x;
	padding-right: $sheet-subtitle-padding-x;
	padding-top: $sheet-subtitle-padding-y;
	position: relative;
	text-transform: $sheet-subtitle-text-transform;
	word-wrap: break-word;

	@include clay-scale-component {
		font-size: $sheet-subtitle-font-size-mobile;
		margin-bottom: $sheet-subtitle-margin-bottom-mobile;
	}

	@if ($enable-c-inner) {
		.c-inner {
			margin-bottom: #{math-sign($sheet-subtitle-padding-y)};
			margin-left: #{math-sign($sheet-subtitle-padding-x)};
			margin-right: #{math-sign($sheet-subtitle-padding-x)};
			margin-top: #{math-sign($sheet-subtitle-padding-y)};
		}
	}

	&.autofit-row {
		padding-bottom: 0;

		.autofit-col {
			margin-bottom: $sheet-subtitle-padding-y;
		}
	}

	&.collapse-icon {
		padding-left: $sheet-subtitle-collapse-icon-padding-left;
		padding-right: $sheet-subtitle-collapse-icon-padding-right;

		@if ($enable-c-inner) {
			.c-inner {
				margin-left: #{math-sign(
						$sheet-subtitle-collapse-icon-padding-left
					)};
				margin-right: #{math-sign(
						$sheet-subtitle-collapse-icon-padding-right
					)};
			}
		}
	}

	.collapse-icon-closed,
	.collapse-icon-open {
		bottom: $sheet-subtitle-collapse-icon-bottom;
		font-size: $sheet-subtitle-collapse-icon-font-size;
		left: $sheet-subtitle-collapse-icon-left;
		right: $sheet-subtitle-collapse-icon-right;
		top: $sheet-subtitle-collapse-icon-top;
	}

	.component-title,
	.heading-text {
		margin-bottom: $sheet-subtitle-heading-text-margin-bottom;
		margin-top: $sheet-subtitle-heading-text-margin-top;
	}

	a,
	.btn {
		text-transform: none;
	}
}

a.sheet-subtitle {
	@include clay-link($sheet-subtitle-link);
}

// Sheet Tertiary Title

.sheet-tertiary-title {
	color: $sheet-tertiary-title-color;
	display: block;
	font-size: $sheet-tertiary-title-font-size;
	font-weight: $sheet-tertiary-title-font-weight;
	line-height: $sheet-tertiary-title-line-height;
	margin-bottom: $sheet-tertiary-title-margin-bottom;
	padding-bottom: $sheet-tertiary-title-padding-y;
	padding-left: $sheet-tertiary-title-padding-x;
	padding-right: $sheet-tertiary-title-padding-x;
	padding-top: $sheet-tertiary-title-padding-y;
	text-transform: $sheet-tertiary-title-text-transform;
	word-wrap: break-word;

	@include clay-scale-component {
		font-size: $sheet-tertiary-title-font-size-mobile;
		margin-bottom: $sheet-tertiary-title-margin-bottom-mobile;
	}

	.component-title {
		margin-bottom: 0;
	}
}

// Sheet Text

.sheet-text {
	color: $sheet-text-color;
	font-size: $sheet-text-font-size;
	font-weight: $sheet-text-font-weight;
	margin-bottom: $sheet-text-margin-bottom;
	word-wrap: break-word;

	@include clay-scale-component {
		font-size: $sheet-text-font-size-mobile;
		margin-bottom: $sheet-text-margin-bottom-mobile;
	}
}

// Sheet Multiple Form Variant

.sheet-multiple-form {
	@include clay-css($sheet-multiple-form);

	.sheet-header {
		@include clay-css($sheet-multiple-form-sheet-header);

		@include clay-scale-component {
			@include clay-css($sheet-multiple-form-sheet-header-mobile);
		}

		.sheet-title {
			@include clay-css($sheet-multiple-form-sheet-title);
		}
	}
}

// Sheet Dataset Content Variant

.sheet-dataset-content {
	@include clay-css($sheet-dataset-content);

	.sheet-header {
		@include clay-css($sheet-dataset-content-sheet-header);

		@include clay-scale-component {
			@include clay-css($sheet-dataset-content-sheet-header-mobile);
		}

		.sheet-title {
			@include clay-css($sheet-dataset-content-sheet-title);
		}
	}
}

// Sheet in Card Page

.card-page-equal-height .sheet {
	display: flex;
	flex-direction: column;
	flex-grow: 1;

	> .autofit-row {
		flex-grow: 1;
	}
}

.card-page-item .sheet {
	@include clay-css($card-page-item-sheet);
}
