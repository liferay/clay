{namespace ClayActionsDropdown}

/**
 * This renders an actions dropdown.
 */
{template .render}
	{@param items: list<?>}
	{@param spritemap: string}
	{@param? _handleButtonClick: any}
	{@param? _handleItemClick: any}
	{@param? button: ?}
	{@param? caption: string}
	{@param? disabled: bool}
	{@param? elementClasses: string}
	{@param? expanded: bool}
	{@param? helpText: string}
	{@param? id: string}
	{@param? itemsIconAlignment: string}
	{@param? preferredAlign: string}
	{@param? toggle: any}
	{@param? triggerClasses: string}

	{let $dropdownElementClasses kind="text"}
		dropdown-action
		{if $elementClasses}
			{sp}{$elementClasses}
		{/if}
	{/let}

	{let $trigger kind="html"}
		{call ClayIcon.render}
			{param spritemap: $spritemap /}
			{param symbol: 'ellipsis-v' /}
		{/call}
	{/let}

	{call ClayDropdownBase.render}
		{param button: $button /}
		{param caption: $caption /}
		{param disabled: $disabled /}
		{param elementClasses: $dropdownElementClasses /}
		{param events: [
			'buttonClicked': $_handleButtonClick,
			'itemClicked': $_handleItemClick,
			'toggle': $toggle
		]/}
		{param expanded: $expanded /}
		{param helpText: $helpText /}
		{param id: $id /}
		{param items: $items /}
		{param itemsIconAlignment: $itemsIconAlignment /}
		{param label: $trigger /}
		{param preferredAlign: $preferredAlign /}
		{param ref: 'dropdown' /}
		{param spritemap: $spritemap /}
		{param triggerClasses: $triggerClasses /}
		{param triggerTitle kind="text"}
			{msg desc=""}
				actions
			{/msg}
		{/param}
	{/call}
{/template}
