{namespace ClayManagementToolbar}

/**
 * This renders the component's whole content.
 */
{template .render}
	{@param spritemap: string}
	{@param? _handleActionClicked: any}
	{@param? _handleCloseMobileSearchClick: any}
	{@param? _handleClearResultsClick: any}
	{@param? _handleCreationButtonClicked: any}
	{@param? _handleDeselectAllClicked: any}
	{@param? _handleFilterDoneButtonClick: any}
	{@param? _handleInfoButtonClicked: any}
	{@param? _handleOpenMobileSearchClick: any}
	{@param? _handleSearchSearchClick: any}
	{@param? _handleSelectAllClicked: any}
	{@param? _handleSelectPageCheckboxChanged: any}
	{@param? _handleSortingButtonClicked: any}
	{@param? _handleViewTypeClicked: any}
	{@param? _showSearchMobile: bool}
	{@param? actionItems: list<[
		disabled: bool,
		href: string,
		icon: string,
		label: string,
		quickAction: bool,
		separator: bool,
		type: string
	]>}
	{@param? contentRenderer: string}
	{@param? creationMenu: bool|string|[
		button: ?,
		caption: string,
		helpText: string,
		items: list<[
			disabled: bool,
			href: string,
			icon: string,
			label: string,
			quickAction: bool,
			separator: bool,
			type: string
		]>
	]}
	{@param? elementClasses: string}
	{@param? filterItems: list<[
		checked: bool,
		disabled: bool,
		inputName: string,
		inputValue: string,
		label: string,
		separator: bool,
		type: string
	]>}
	{@param? hideFiltersDoneButton: bool}
	{@param? id: string}
	{@param? searchActionURL: string}
	{@param? searchFormName: string}
	{@param? searchInputName: string}
	{@param? searchValue: string}
	{@param? selectable: bool}
	{@param? selectedItems: number}
	{@param? showInfoButton: bool}
	{@param? showSearch: bool}
	{@param? sortingOrder: string}
	{@param? totalItems: number}
	{@param? viewTypes: list<[
		active: bool,
		disabled: bool,
		icon: string,
		label: string
	]>}

	{let $isActive: $selectedItems and $selectedItems > 0 /}

	{if $isActive}
		{call .active}
			{param _handleActionClicked: $_handleActionClicked /}
			{param _handleDeselectAllClicked: $_handleDeselectAllClicked /}
			{param _handleInfoButtonClicked: $_handleInfoButtonClicked /}
			{param _handleSelectAllClicked: $_handleSelectAllClicked /}
			{param _handleSelectPageCheckboxChanged: $_handleSelectPageCheckboxChanged /}
			{param actionItems: $actionItems /}
			{param elementClasses: $elementClasses /}
			{param selectedItems: $selectedItems /}
			{param showInfoButton: $showInfoButton /}
			{param spritemap: $spritemap /}
			{param totalItems: $totalItems /}
		{/call}
	{else}
		<div>
			{call .default}
				{param _handleCloseMobileSearchClick: $_handleCloseMobileSearchClick /}
				{param _handleClearResultsClick: $_handleClearResultsClick /}
				{param _handleCreationButtonClicked: $_handleCreationButtonClicked /}
				{param _handleFilterDoneButtonClick: $_handleFilterDoneButtonClick /}
				{param _handleInfoButtonClicked: $_handleInfoButtonClicked /}
				{param _handleOpenMobileSearchClick: $_handleOpenMobileSearchClick /}
				{param _handleSearchSearchClick: $_handleSearchSearchClick /}
				{param _handleSelectPageCheckboxChanged: $_handleSelectPageCheckboxChanged /}
				{param _handleSortingButtonClicked: $_handleSortingButtonClicked /}
				{param _handleViewTypeClicked: $_handleViewTypeClicked /}
				{param _showSearchMobile: $_showSearchMobile /}
				{param contentRenderer: $contentRenderer ?: '' /}
				{param creationMenu: $creationMenu /}
				{param disabled: $totalItems == 0 /}
				{param elementClasses: $elementClasses /}
				{param filterItems: $filterItems /}
				{param hideFiltersDoneButton: $hideFiltersDoneButton /}
				{param id: $id /}
				{param searchActionURL: $searchActionURL /}
				{param searchFormName: $searchFormName /}
				{param searchInputName: $searchInputName /}
				{param searchValue: $searchValue /}
				{param selectable: $selectable /}
				{param showInfoButton: $showInfoButton /}
				{param showSearch: $showSearch != false /}
				{param sortingOrder: $sortingOrder /}
				{param spritemap: $spritemap /}
				{param totalItems: $totalItems /}
				{param viewTypes: $viewTypes /}
			{/call}
		</div>
	{/if}
{/template}

/**
 * This renders the component's active content.
 */
{template .active}
	{@param spritemap: string}
	{@param? _handleActionClicked: any}
	{@param? _handleDeselectAllClicked: any}
	{@param? _handleInfoButtonClicked: any}
	{@param? _handleSelectAllClicked: any}
	{@param? _handleSelectPageCheckboxChanged: any}
	{@param? actionItems: list<[
		disabled: bool,
		href: string,
		icon: string,
		label: string,
		quickAction: bool,
		separator: bool,
		type: string
	]>}
	{@param? elementClasses: string}
	{@param? id: string}
	{@param? selectedItems: number}
	{@param? showInfoButton: bool}
	{@param? totalItems: number}

	{let $navAttributes kind="attributes"}
		class="management-bar management-bar-primary navbar navbar-expand-md
			{if $elementClasses}
				{sp}{$elementClasses}
			{/if}
		"

		{if $id}
			id="{$id}"
		{/if}
	{/let}

	<nav {$navAttributes}>
		<div class="container">
			<ul class="navbar-nav">
				<li class="nav-item">
					{call ClayCheckbox.render}
						{param checked: true /}
						{param events: ['change': $_handleSelectPageCheckboxChanged] /}
						{param hideLabel: true /}
						{param indeterminate: $selectedItems < $totalItems /}
						{param label: 'Select Page' /}
						{param ref: 'selectPageCheckbox' /}
					{/call}
				</li>
				<li class="nav-item">
					<span class="navbar-text">
						{$selectedItems} of {$totalItems}{sp}
						<span class="navbar-breakpoint-down-d-none">items selected</span>
					</span>
				</li>
				<li class="nav-item">
					{if $selectedItems < $totalItems}
						{call ClayButton.render}
							{param elementClasses: 'nav-btn' /}
							{param events: ['click': $_handleSelectAllClicked] /}
							{param label: 'Select all' /}
							{param ref: 'selectAllButton' /}
							{param style: 'link' /}
						{/call}
					{else}
						{call ClayButton.render}
							{param elementClasses: 'nav-btn' /}
							{param events: ['click': $_handleDeselectAllClicked] /}
							{param label: 'Deselect all' /}
							{param ref: 'deselectAllButton' /}
							{param style: 'link' /}
						{/call}
					{/if}
				</li>
			</ul>

			{if $actionItems or $showInfoButton}
				<ul class="navbar-nav">
					{if $showInfoButton}
						<li class="nav-item">
							{call ClayButton.render}
								{param elementClasses: 'nav-link nav-link-monospaced' /}
								{param events: ['click': $_handleInfoButtonClicked] /}
								{param icon: 'info-circle-open' /}
								{param ref: 'infoButton' /}
								{param spritemap: $spritemap /}
								{param style: 'unstyled' /}
							{/call}
						</li>
					{/if}

					{if $actionItems}
						{foreach $item in $actionItems}
							{if $item.quickAction and $item.icon and $spritemap}
								<li class="nav-item navbar-breakpoint-down-d-none" data-onclick="{$_handleActionClicked}">
									{call ClayButton.render}
										{param elementClasses: 'quick-action-item' /}
										{param icon: $item.icon /}
										{param ref: 'quickAction' + index($item) /}
										{param spritemap: $spritemap /}
										{param style: 'unstyled' /}
									{/call}
								</li>
							{/if}
						{/foreach}

						<li class="nav-item">
							{call ClayActionsDropdown.render}
								{param events: ['itemClicked': $_handleActionClicked] /}
								{param items: $actionItems /}
								{param spritemap: $spritemap /}
							{/call}
						</li>
					{/if}
				</ul>
			{/if}
		</div>
	</nav>
{/template}

/**
 * This renders the component's active content.
 */
{template .default}
	{@param spritemap: string}
	{@param? _handleCloseMobileSearchClick: any}
	{@param? _handleClearResultsClick: any}
	{@param? _handleCreationButtonClicked: any}
	{@param? _handleFilterDoneButtonClick: any}
	{@param? _handleInfoButtonClicked: any}
	{@param? _handleOpenMobileSearchClick: any}
	{@param? _handleSearchSearchClick: any}
	{@param? _handleSelectPageCheckboxChanged: any}
	{@param? _handleSortingButtonClicked: any}
	{@param? _handleViewTypeClicked: any}
	{@param? _showSearchMobile: bool}
	{@param? contentRenderer: string}
	{@param? creationMenu: bool|string|[
		button: ?,
		caption: string,
		helpText: string,
		items: list<[
			disabled: bool,
			href: string,
			icon: string,
			label: string,
			quickAction: bool,
			separator: bool,
			type: string
		]>
	]}
	{@param? disabled: bool}
	{@param? elementClasses: string}
	{@param? filterItems: list<[
		checked: bool,
		disabled: bool,
		inputName: string,
		inputValue: string,
		label: string,
		separator: bool,
		type: string
	]>}
	{@param? hideFiltersDoneButton: bool}
	{@param? id: string}
	{@param? searchActionURL: string}
	{@param? searchFormName: string}
	{@param? searchInputName: string}
	{@param? searchValue: string}
	{@param? selectable: bool}
	{@param? showInfoButton: bool}
	{@param? showSearch: bool}
	{@param? sortingOrder: string}
	{@param? totalItems: number}
	{@param? viewTypes: list<[
		active: bool,
		disabled: bool,
		icon: string,
		label: string
	]>}

	{let $navAttributes kind="attributes"}
		class="management-bar management-bar-light navbar navbar-expand-md
			{if $elementClasses}
				{sp}{$elementClasses}
			{/if}
		"

		{if $id}
			id="{$id}"
		{/if}
	{/let}

	<nav {$navAttributes}>
		{let $onlySearch: $showSearch and not $creationMenu and not $selectable and not $filterItems and not $sortingOrder and not $viewTypes /}

		{let $containerClasses kind="text"}
			{if $onlySearch}
				container-fluid container-fluid-max-xl
			{else}
				container
			{/if}
		{/let}

		<div class="{$containerClasses}">
			<ul class="navbar-nav">
				{if $selectable}
					<li class="nav-item">
						{call ClayCheckbox.render}
							{param disabled: $disabled /}
							{param events: ['change': $_handleSelectPageCheckboxChanged] /}
							{param hideLabel: true /}
							{param label: 'Select Page' /}
							{param ref: 'selectPageCheckbox' /}
						{/call}
					</li>
				{/if}

				{if $filterItems}
					{let $filtersTrigger kind="html"}
						<span class="navbar-breakpoint-down-d-none">
							Filter and Order
							{call ClayIcon.render}
								{param spritemap: $spritemap /}
								{param symbol: 'caret-bottom' /}
							{/call}
						</span>

						<span class="navbar-breakpoint-d-none">
							{call ClayIcon.render}
								{param spritemap: $spritemap /}
								{param symbol: 'filter' /}
							{/call}
						</span>
					{/let}

					<li class="dropdown nav-item">
						{call ClayDropdownBase.render}
							{param button: $hideFiltersDoneButton ? null : [
								'label': 'Done'
							] /}
							{param disabled: $disabled /}
							{param events: ['buttonClicked': $_handleFilterDoneButtonClick] /}
							{param items: $filterItems /}
							{param label: $filtersTrigger /}
							{param ref: 'filters' /}
							{param spritemap: $spritemap /}
							{param triggerClasses: 'nav-link' /}
						{/call}
					</li>
				{/if}

				{if $sortingOrder}
					<li class="nav-item">
						{let $sortingClasses kind="text"}
							nav-link nav-link-monospaced
							{if $sortingOrder == 'desc'}
								{sp}order-arrow-down-active
							{else}
								{sp}order-arrow-up-active
							{/if}
						{/let}

						{call ClayButton.render}
							{param disabled: $disabled /}
							{param elementClasses: $sortingClasses /}
							{param events: ['click': $_handleSortingButtonClicked] /}
							{param icon: 'order-arrow' /}
							{param ref: 'sortingButton' /}
							{param spritemap: $spritemap /}
							{param style: 'unstyled' /}
						{/call}
					</li>
				{/if}
			</ul>

			{if $showSearch}
				{let $searchClasses kind="text"}
					navbar-form navbar-form-autofit
					{if not $onlySearch}
						{sp}navbar-overlay navbar-overlay-sm-down
						{if $_showSearchMobile}
							{sp}show
						{/if}
					{/if}
				{/let}

				<div class="{$searchClasses}">
					{delcall ClayManagementToolbar.SearchForm variant="$contentRenderer"}
						{param _handleCloseMobileSearchClick: $_handleCloseMobileSearchClick /}
						{param _handleSearchSearchClick: $_handleSearchSearchClick /}
						{param disabled: $disabled /}
						{param onlySearch: $onlySearch /}
						{param searchActionURL: $searchActionURL /}
						{param searchFormName: $searchFormName /}
						{param searchInputName: $searchInputName /}
						{param spritemap: $spritemap /}
					{/delcall}
				</div>
			{/if}

			<ul class="navbar-nav">
				{if $showSearch and not $onlySearch}
					<li class="nav-item navbar-breakpoint-d-none">
						{call ClayButton.render}
							{param disabled: $disabled /}
							{param elementClasses: 'nav-link nav-link-monospaced' /}
							{param events: ['click': $_handleOpenMobileSearchClick] /}
							{param icon: 'search' /}
							{param spritemap: $spritemap /}
							{param style: 'unstyled' /}
						{/call}
					</li>
				{/if}

				{if $showInfoButton}
					<li class="nav-item">
						{call ClayButton.render}
							{param elementClasses: 'nav-link nav-link-monospaced' /}
							{param events: ['click': $_handleInfoButtonClicked] /}
							{param icon: 'info-circle-open' /}
							{param ref: 'infoButton' /}
							{param spritemap: $spritemap /}
							{param style: 'unstyled' /}
						{/call}
					</li>
				{/if}

				{if $viewTypes}
					<li class="dropdown nav-item">
						{call ClayDropdown.render}
							{param events: ['itemClicked': $_handleViewTypeClicked] /}
							{param icon kind="text"}
								{foreach $viewType in $viewTypes}
									{if $viewType.active}
										{$viewType.icon}
									{/if}
								{/foreach}
							{/param}
							{param items: $viewTypes /}
							{param itemsIconAlignment: 'left' /}
							{param ref: 'viewTypesDropdown' /}
							{param spritemap: $spritemap /}
							{param triggerClasses: 'nav-link nav-link-monospaced' /}
						{/call}
					</li>
				{/if}

				{if $creationMenu}
					<li class="nav-item">
						{call .creationMenu}
							{param _handleCreationButtonClicked: $_handleCreationButtonClicked /}
							{param creationMenu: $creationMenu /}
							{param spritemap: $spritemap /}
						{/call}
					</li>
				{/if}
			</ul>
		</div>
	</nav>

	{if $searchValue and $totalItems > 0}
	    {call .tbar}
	        {param _handleClearResultsClick: $_handleClearResultsClick /}
	        {param searchValue: $searchValue /}
	        {param totalItems: $totalItems /}
	    {/call}
	{/if}
{/template}

/**
 * This renders the creation menu.
 */
{template .creationMenu}
	{@param creationMenu: ?}
	{@param spritemap: string}
	{@param? _handleCreationButtonClicked: any}

	{if $creationMenu.items}
		{call ClayDropdownBase.render}
			{param button: $creationMenu.button /}
			{param caption: $creationMenu.caption /}
			{param helpText: $creationMenu.helpText /}
			{param items: $creationMenu.items /}
			{param label kind="html"}
				{call ClayIcon.render}
					{param spritemap: $spritemap /}
					{param symbol: 'plus' /}
				{/call}
			{/param}

			{param ref: 'creationMenuDropdown' /}
			{param spritemap: $spritemap /}
			{param style: 'primary' /}
			{param triggerClasses: 'nav-btn nav-btn-monospaced navbar-breakpoint-down-d-none' /}
		{/call}
	{elseif $creationMenu == true}
		{call ClayButton.render}
			{param elementClasses: 'nav-btn nav-btn-monospaced' /}
			{param events: ['click': $_handleCreationButtonClicked ] /}
			{param icon: 'plus' /}
			{param ref: 'creationMenu' /}
			{param spritemap: $spritemap /}
		{/call}
	{else}
		{call ClayLink.render}
			{param ariaLabel: 'add' /}
			{param buttonStyle: 'primary' /}
			{param elementClasses: 'nav-btn nav-btn-monospaced navbar-breakpoint-down-d-none' /}
			{param href: $creationMenu /}
			{param icon: 'plus' /}
			{param spritemap: $spritemap /}
		{/call}
	{/if}
{/template}

/**
 * This renders the search results bar.
 */
{template .tbar}
	{@param? _handleClearResultsClick: any}
	{@param? searchValue: string}
	{@param? totalItems: number}

	<nav class="tbar subnav-tbar subnav-tbar-primary">
		<div class="container-fluid container-fluid-max-xl">
			<ul class="tbar-nav">
				<li class="tbar-item tbar-item-expand">
					<div class="tbar-section">
						<span class="text-truncate-inline">
							<span class="text-truncate">{$totalItems} results for <strong>{$searchValue}</strong></span>
						</span>
					</div>
				</li>
				<li class="tbar-item">
					{call ClayButton.render}
						{param elementClasses: 'component-link tbar-link' /}
						{param events: ['click': $_handleClearResultsClick] /}
						{param label: 'Clear' /}
						{param ref: 'clearSearch' /}
						{param style: 'unstyled' /}
					{/call}
				</li>
			</ul>
		</div>
	</nav>
{/template}

/**
 * This renders the search form.
 */
{deltemplate ClayManagementToolbar.SearchForm}
	{@param spritemap: string}
	{@param? _handleCloseMobileSearchClick: any}
	{@param? _handleSearchSearchClick: any}
	{@param? disabled: bool}
	{@param? onlySearch: bool}
	{@param? searchActionURL: string}
	{@param? searchFormName: string}
	{@param? searchInputName: string}
	{@param? searchValue: string}

	{let $searchFormContent kind="html"}
		{let $searchFormAttributes kind="attributes"}
			{if $searchActionURL}
				action="{$searchActionURL}"
			{/if}

			{if $searchFormName}
				name="{$searchFormName}"
			{/if}

			role="search"
		{/let}

		<form {$searchFormAttributes}>
			<div class="input-group">
				<div class="input-group-item">
					{let $inputAttributes kind="attributes"}
						aria-label="Search"
						{if $disabled}
							disabled
						{/if}

						class="form-control input-group-inset input-group-inset-after"
						name="{$searchInputName}"
						placeholder="Search for..."
						ref="search"
						type="text"
						value="{$searchValue}"
					{/let}

					<input {$inputAttributes} />

					<span class="input-group-inset-item input-group-inset-item-after">
						{if not $onlySearch}
							{call ClayButton.render}
								{param elementClasses: 'navbar-breakpoint-d-none' /}
								{param events: ['click': $_handleCloseMobileSearchClick] /}
								{param icon: 'times' /}
								{param spritemap: $spritemap /}
								{param style: 'unstyled' /}
							{/call}
						{/if}

						{call ClayButton.render}
							{param disabled: $disabled /}
							{param elementClasses: $onlySearch ? '' : 'navbar-breakpoint-d-block' /}
							{param events: ['click': $_handleSearchSearchClick] /}
							{param icon: 'search' /}
							{param ref: 'searchButton' /}
							{param spritemap: $spritemap /}
							{param style: 'unstyled' /}
							{param type: 'submit' /}
						{/call}
					</span>
				</div>
			</div>
		</form>
	{/let}

	{if $onlySearch}
		{$searchFormContent}
	{else}
		<div class="container-fluid container-fluid-max-xl">
			{$searchFormContent}
		</div>
	{/if}
{/deltemplate}
