button {
	-webkit-appearance: button;
	font-family: inherit;
	font-size: inherit;
	line-height: inherit;

	// Remove the margin in Safari

	margin: 0;

	// Show the overflow in Edge

	overflow: visible;
}

.btn {
	@include clay-button-variant($c-btn);
}

.btn .inline-item {
	@include clay-css($c-btn-c-inline-item);
}

.btn-section {
	@include clay-css($c-btn-section);
}

// Button Sizes

// Placeholder `%clay-btn-lg` is deprecated

%clay-btn-lg {
	@include border-radius($btn-border-radius-lg);

	font-size: $btn-font-size-lg;
	line-height: $btn-line-height-lg;
	padding-bottom: $btn-padding-y-lg;
	padding-left: $btn-padding-x-lg;
	padding-right: $btn-padding-x-lg;
	padding-top: $btn-padding-y-lg;

	@include clay-scale-component {
		font-size: $btn-font-size-lg-mobile;
		padding-bottom: $btn-padding-y-lg-mobile;
		padding-left: $btn-padding-x-lg-mobile;
		padding-right: $btn-padding-x-lg-mobile;
		padding-top: $btn-padding-y-lg-mobile;
	}

	.inline-item {
		font-size: $btn-inline-item-font-size-lg;
	}

	.btn-section {
		font-size: $btn-section-font-size-lg;
	}
}

%c-btn-lg {
	@include clay-button-variant($c-btn-lg);
}

.btn-lg {
	@extend %c-btn-lg !optional;
}

// Placeholder `%clay-btn-sm` is deprecated

%clay-btn-sm {
	@include border-radius($btn-border-radius-sm);

	font-size: $btn-font-size-sm;
	line-height: $btn-line-height-sm;
	padding-bottom: $btn-padding-y-sm;
	padding-left: $btn-padding-x-sm;
	padding-right: $btn-padding-x-sm;
	padding-top: $btn-padding-y-sm;

	@include clay-scale-component {
		font-size: $btn-font-size-sm-mobile;
		padding-bottom: $btn-padding-y-sm-mobile;
		padding-left: $btn-padding-x-sm-mobile;
		padding-right: $btn-padding-x-sm-mobile;
		padding-top: $btn-padding-y-sm-mobile;
	}

	.inline-item {
		font-size: $btn-inline-item-font-size-sm;
	}

	.btn-section {
		font-size: $btn-section-font-size-sm;
	}
}

%c-btn-sm {
	@include clay-button-variant($c-btn-sm);
}

.btn-sm {
	@extend %c-btn-sm !optional;
}

// Button Unstyled

// Placeholder `%btn-unstyled` is deprecated

%btn-unstyled {
	background-color: rgba(0, 0, 0, 0.001);
	border-width: 0;
	cursor: $btn-cursor;
	font-size: inherit;
	font-weight: inherit;
	line-height: inherit;
	max-width: 100%;
	padding: 0;
	text-align: left;
	text-transform: inherit;
	vertical-align: baseline;
}

%c-btn-unstyled {
	@include clay-button-variant($c-btn-unstyled);
}

.btn-unstyled {
	@extend %c-btn-unstyled !optional;
}

// Button Monospaced

.btn-monospaced {
	@include clay-button-variant($c-btn-monospaced);
}

.btn-monospaced.btn-lg {
	@include clay-button-variant($c-btn-monospaced-lg);
}

.btn-monospaced.btn-sm {
	@include clay-button-variant($c-btn-monospaced-sm);
}

// Button Block

.btn-block {
	@include clay-css($c-btn-block);

	+ .btn-block {
		@include clay-css($c-btn-block-c-btn-block);
	}
}

// Button Variants

@each $color, $value in $btn-palette {
	.btn-#{$color} {
		@include clay-button-variant($value);
	}

	%btn-#{$color}-focus {
		background-color: map-get($value, focus-bg);
		border-color: map-get($value, focus-border-color);
		box-shadow: map-get($value, focus-box-shadow);
		color: map-get($value, focus-color);
	}
}

// Button Outline Variants

@each $color, $value in $btn-outline-palette {
	.btn-outline-#{$color} {
		@include clay-button-variant($value);
	}

	%btn-outline-#{$color}-focus {
		background-color: map-get($value, focus-bg);
		border-color: map-get($value, focus-border-color);
		box-shadow: map-get($value, focus-box-shadow);
		color: map-get($value, focus-color);
	}
}

.btn-outline-borderless {
	@include clay-button-variant($c-btn-outline-borderless);
}

// Loading Icons with Buttons

.btn .loading-animation {
	font-size: 1em;
	margin-top: $inline-item-lexicon-icon-margin-top;
}
