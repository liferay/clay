*,
*::before,
*::after {
	box-sizing: border-box;
}

html {
	@include clay-css($html);
}

// Shim for "new" HTML5 structural elements to display correctly (IE10, older browsers)
// TODO: remove in v5

article, aside, figcaption, figure, footer, header, hgroup, main, nav, section {
	display: block;
}

body {
	@include clay-css($body);

	@include clay-scale-component {
		@include clay-css($body-mobile);
	}
}

// Future-proof rule: in browsers that support :focus-visible, suppress the focus outline
// on elements that programmatically receive focus but wouldn't normally show a visible
// focus outline. In general, this would mean that the outline is only applied if the
// interaction that led to the element receiving programmatic focus was a keyboard interaction,
// or the browser has somehow determined that the user is primarily a keyboard user and/or
// wants focus outlines to always be presented.
//
// See https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible
// and https://developer.paciellogroup.com/blog/2018/03/focus-visible-and-backwards-compatibility/

[tabindex="-1"]:focus:not(:focus-visible) {
	outline: 0 !important;
}

hr {
	@include clay-css($hr);
}

h1, h2, h3, h4, h5, h6,
.h1, .h2, .h3, .h4, .h5, .h6 {
	@include clay-css($headings);
}

// Headings

h1,
.h1 {
	@include clay-css($h1);

	@include clay-scale-component {
		@include clay-css($h1-mobile);
	}
}

h2,
.h2 {
	@include clay-css($h2);

	@include clay-scale-component {
		@include clay-css($h2-mobile);
	}
}

h3,
.h3 {
	@include clay-css($h3);

	@include clay-scale-component {
		@include clay-css($h3-mobile);
	}
}

h4,
.h4 {
	@include clay-css($h4);

	@include clay-scale-component {
		@include clay-css($h4-mobile);
	}
}

h5,
.h5 {
	@include clay-css($h5);

	@include clay-scale-component {
		@include clay-css($h5-mobile);
	}
}

h6,
.h6 {
	@include clay-css($h6);

	@include clay-scale-component {
		@include clay-css($h6-mobile);
	}
}

p {
	@include clay-css($paragraph);
}

// Abbreviations
//
// 1. Duplicate behavior to the data-* attribute for our tooltip plugin
// 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
// 3. Add explicit cursor to indicate changed behavior.
// 4. Remove the bottom border in Firefox 39-.
// 5. Prevent the text-decoration to be skipped.

abbr[title],
abbr[data-original-title] { // 1
	text-decoration: underline; // 2
	text-decoration: underline dotted; // 2
	cursor: help; // 3
	border-bottom: 0; // 4
	text-decoration-skip-ink: none; // 5
}

// Builds on `abbr`

.initialism {
	@include clay-css($initialism);
}

address {
	@include clay-css($address)
}

ol {
	@include clay-css($ol);
}

ul {
	@include clay-css($ul);
}

dl {
	@include clay-css($dl);
}

ol ol,
ul ul,
ol ul,
ul ol {
	margin-bottom: 0;
}

dt {
	@include clay-css($dt);
}

dd {
	@include clay-css($dd);
}

.list-unstyled {
	@include clay-css($list-unstyled);
}

.list-inline {
	@include clay-css($list-inline);
}

.list-inline-item {
	@include clay-css($list-inline-item);
}

.list-inline-item:last-child,
.list-inline-item-last {
	@include clay-css($list-inline-item-last);
}

blockquote,
.blockquote {
	@include clay-css($blockquote);
}

.blockquote-footer {
	@include clay-css($blockquote-footer);

	&::before {
		@include clay-css($blockquote-footer-before);
	}
}

b {
	@include clay-css($b);
}

strong {
	@include clay-css($strong);
}

small,
.small {
	@include clay-css($small);
}

sub {
	@include clay-css($sub);
}

sup {
	@include clay-css($sup);
}

[href] {
	@include clay-link($link);
}

//
// Code
//

code {
	@include clay-css($code);
}

a > code {
	color: inherit;
}

kbd {
	@include clay-css($kbd);

	kbd {
		@include clay-css($kbd-kbd);
	}
}

samp {
	@include clay-css($samp);
}

pre {
	@include clay-css($pre);

	code {
		@include clay-css($pre-code);
	}
}

.pre-scrollable {
	@include clay-css($pre-scrollable);
}

summary {
	// Add the correct display in all browsers

	display: list-item;
	cursor: pointer;
}

template {
	// Add the correct display in IE

	display: none;
}

// Lead

.lead {
	@include clay-css($lead);
}

// Display

.display-1 {
	@include clay-css($display-1);
}

.display-2 {
	@include clay-css($display-2);
}

.display-3 {
	@include clay-css($display-3);
}

.display-4 {
	@include clay-css($display-4);
}


// Reference Mark

.reference-mark {
	display: inline-block;
	font-size: $reference-mark-font-size;
	position: relative;
	vertical-align: $reference-mark-vertical-align;
}

// Marked Text

mark,
.mark {
	@include clay-css($mark);

	@include clay-highlight-text($mark-bg, $mark-color);
}

// Kbd

.c-kbd-group {
	@include clay-css($c-kbd-group);
}

.c-kbd {
	@include clay-css($c-kbd);
}

.c-kbd-monospaced {
	@include clay-css($c-kbd-monospaced);
}

.c-kbd-inline {
	@include clay-css($c-kbd-inline);
}

// Kbd Sizes

.c-kbd-group-sm {
	@include clay-css($c-kbd-group-sm);

	.c-kbd {
		font-size: inherit;
	}
}

.c-kbd-group-lg {
	@include clay-css($c-kbd-group-lg);

	.c-kbd {
		font-size: inherit;
	}
}

.c-kbd.c-kbd-sm {
	@include clay-css($c-kbd-sm);
}

.c-kbd.c-kbd-lg {
	@include clay-css($c-kbd-lg);
}

// Kbd Light

.c-kbd-group-light {
	@include clay-css($c-kbd-group-light);
}

.c-kbd-light {
	@include clay-css($c-kbd-light);
}

// Kbd Dark

.c-kbd-group-dark {
	@include clay-css($c-kbd-group-dark);
}

.c-kbd-dark {
	@include clay-css($c-kbd-dark);
}

// Text Truncate

.text-truncate {
	display: block;
}

.text-truncate-inline {
	display: inline-flex;
	max-width: 100%;

	.text-truncate {
		display: inline-block;
		max-width: 100%;
		overflow: hidden;
		text-overflow: ellipsis;
		vertical-align: bottom;
		white-space: nowrap;
		word-wrap: normal;
	}
}
