////
/// @group Labels
////

/// A mixin for creating `.label` size variants.
/// @deprecated use `clay-label-variant` instead
/// @param {Map} $map - A map of `key: value` pairs. The keys and value types are listed below:
/// @example
/// border-width: {Number | String | List | Null}, // Default: $label-border-width
/// font-size: {Number | String | Null},
/// height: {Number | String | Null},
/// line-height: {Number | String | Null},
/// margin-bottom: {Number | String | Null},
/// margin-left: {Number | String | Null},
/// margin-right: {Number | String | Null},
/// margin-top: {Number | String | Null},
/// padding-x: {Number | String | Null},
/// padding-y: {Number | String | Null},
/// text-transform: {String | List | Null},
/// item-spacer-x: {Number | String | Null},
/// item-spacer-y: {Number | String | Null},
/// lexicon-icon-height: {Number | String | Null}, // Default: map-get($map, lexicon-icon-width)
/// lexicon-icon-margin-top: {Number | String | Null},
/// lexicon-icon-width: {Number | String | Null},
/// sticker-border-radius: {Number | String | List | Null},
/// sticker-size: {Number | String | Null},
/// close: {Map | Null}, // Pass parameters to `clay-close` mixin
/// c-inner: {Map | Null}, // Pass parameters to `clay-css` mixin

@mixin clay-label-size($map) {
	$border-width: setter(map-get($map, border-width), $label-border-width);
	$font-size: map-get($map, font-size);
	$height: map-get($map, height);
	$line-height: map-get($map, line-height);
	$margin-bottom: map-get($map, margin-bottom);
	$margin-left: map-get($map, margin-left);
	$margin-right: map-get($map, margin-right);
	$margin-top: map-get($map, margin-top);
	$padding-x: map-get($map, padding-x);
	$padding-y: map-get($map, padding-y);
	$text-transform: map-get($map, text-transform);

	$item-spacer-x: map-get($map, item-spacer-x);
	$item-spacer-y: map-get($map, item-spacer-y);

	$lexicon-icon-height: setter(
		map-get($map, lexicon-icon-height),
		map-get($map, lexicon-icon-width)
	);
	$lexicon-icon-margin-top: map-get($map, lexicon-icon-margin-top);
	$lexicon-icon-width: map-get($map, lexicon-icon-width);

	$sticker-border-radius: map-get($map, sticker-border-radius);
	$sticker-size: map-get($map, sticker-size);

	$close: setter(map-get($map, close), ());

	$c-inner: setter(map-get($map, c-inner), ());
	$c-inner: map-deep-merge(
		(
			margin-bottom: math-sign($padding-y),
			margin-left: math-sign($padding-x),
			margin-right: math-sign($padding-x),
			margin-top: math-sign($padding-y),
		),
		$c-inner
	);

	border-width: $border-width;
	font-size: $font-size;
	height: auto;
	line-height: $line-height;
	margin-bottom: $margin-bottom;
	margin-left: $margin-left;
	margin-right: $margin-right;
	margin-top: $margin-top;
	min-height: $height;
	padding-bottom: $padding-y;
	padding-left: $padding-x;
	padding-right: $padding-x;
	padding-top: $padding-y;
	text-transform: $text-transform;

	// Inline Item in Labels are deprecated in v2.0.0-rc.11 use .label-item
	// pattern instead
	.inline-item {
		a,
		.btn-unstyled,
		.close {
			margin-top: $lexicon-icon-margin-top;
		}

		.lexicon-icon {
			height: $lexicon-icon-height;
			margin-top: $lexicon-icon-margin-top;
			width: $lexicon-icon-width;
		}
	}

	.label-item {
		margin-bottom: $item-spacer-y;
		margin-top: $item-spacer-y;

		.lexicon-icon {
			height: $lexicon-icon-height;
			margin-top: $lexicon-icon-margin-top;
			width: $lexicon-icon-width;
		}
	}

	.label-item-before {
		margin-right: $item-spacer-x;
	}

	.label-item-after {
		margin-left: $item-spacer-x;
	}

	.close {
		@include clay-close($close);
	}

	.sticker {
		border-radius: $sticker-border-radius;
		height: $sticker-size;
		line-height: $sticker-size;
		width: $sticker-size;
	}

	.sticker-overlay {
		border-radius: $sticker-border-radius;
	}

	@if ($enable-c-inner) {
		> .c-inner {
			@include clay-css($c-inner);
		}
	}
}

/// A mixin for creating `.label` color variants.
/// @param {Map} $map - A map of `key: value` pairs. The keys and value types are listed below:
/// @example
/// See Mixin `clay-css` for available keys to pass into the base selector
/// bg: {Color | String | Null}, // deprecated after 3.7.0
/// border-color: {Color | String | List | Null}, // deprecated after 3.7.0
/// color: {Color | String | Null}, // deprecated after 3.7.0
/// outline: {Number | String | Null}, // deprecated after 3.7.0
/// text-decoration: {String | Null}, // deprecated after 3.7.0
/// transition: {String | List | Null}, // deprecated after 3.7.0
/// hover-bg: {Color | String | Null}, // deprecated after 3.7.0
/// hover-border-color: {Color | String | List | Null}, // deprecated after 3.7.0
/// hover-color: {Color | String | Null}, // deprecated after 3.7.0
/// hover-text-decoration: {String | Null}, // deprecated after 3.7.0
/// hover: {Map | Null}, // See Mixin `clay-css` for available keys
/// focus-bg: {Color | String | Null}, // deprecated after 3.7.0
/// focus-border-color: {Color | String | List | Null}, // deprecated after 3.7.0
/// focus-box-shadow: {String | List | Null}, // deprecated after 3.7.0
/// focus-color: {Color | String | Null}, // deprecated after 3.7.0
/// focus-outline: {Number | String | Null}, // deprecated after 3.7.0
/// focus-text-decoration: {String | Null}, // deprecated after 3.7.0
/// focus: {Map | Null}, // See Mixin `clay-css` for available keys
/// disabled-bg: {Color | String | Null}, // deprecated after 3.7.0
/// disabled-border-color: {Color | String | List | Null}, // deprecated after 3.7.0
/// disabled-box-shadow: {String | List | Null}, // deprecated after 3.7.0
/// disabled-color: {Color | String | Null}, // deprecated after 3.7.0
/// disabled: {Map | Null}, // See Mixin `clay-css` for available keys
/// link-color: {Color | String | Null}, // deprecated after 3.7.0
/// link-text-decoration: {String | Null}, // deprecated after 3.7.0
/// link: {Map | Null}, // See Mixin `clay-css` for available keys
/// link-hover-color: {Color | String | Null}, // deprecated after 3.7.0
/// link-hover-text-decoration: {String | Null}, // deprecated after 3.7.0
/// link-hover: {Map | Null}, // See Mixin `clay-css` for available keys
/// close: {Map | Null}, // Pass parameters to `clay-close` mixin

@mixin clay-label-variant($map) {
	$map: map-merge(
		(
			background-color: map-get($map, bg),
			border-color: map-get($map, border-color),
			color: map-get($map, color),
			outline: map-get($map, outline),
			text-decoration: map-get($map, text-decoration),
			transition: map-get($map, transition),
		),
		$map
	);

	$hover: map-deep-merge(
		(
			background-color: map-get($map, hover-bg),
			border-color: map-get($map, hover-border-color),
			color: map-get($map, hover-color),
			text-decoration: map-get($map, hover-text-decoration),
		),
		map-get($map, hover)
	);

	$focus: map-deep-merge(
		(
			background-color: map-get($map, focus-bg),
			border-color: map-get($map, focus-border-color),
			box-shadow: map-get($map, focus-box-shadow),
			color: map-get($map, focus-color),
			outline: map-get($map, focus-outline),
			text-decoration: map-get($map, focus-text-decoration),
		),
		map-get($map, focus)
	);

	$disabled: map-deep-merge(
		(
			background-color: map-get($map, disabled-bg),
			border-color: map-get($map, disabled-border-color),
			box-shadow: map-get($map, disabled-box-shadow),
			color: map-get($map, disabled-color),
		),
		map-get($map, disabled)
	);

	$link: map-deep-merge(
		(
			color: map-get($map, link-color),
			text-decoration: map-get($map, link-text-decoration),
		),
		map-get($map, link)
	);

	$link-hover: map-deep-merge(
		(
			color: map-get($map, link-hover-color),
			text-decoration: map-get($map, link-hover-text-decoration),
		),
		map-get($map, link-hover)
	);

	$close: setter(map-get($map, close), ());

	@include clay-css($map);

	@at-root {
		a#{&},
		button#{&} {
			&:hover {
				@include clay-css($hover);
			}

			&:focus {
				@include clay-css($focus);
			}
		}
	}

	&[tabindex] {
		&:hover {
			@include clay-css($hover);
		}

		&:focus {
			@include clay-css($focus);
		}
	}

	&:disabled,
	&.disabled {
		@include clay-css($disabled);
	}

	a,
	.btn-unstyled {
		@include clay-css($link);

		&:hover,
		&:focus {
			@include clay-css($link-hover);
		}
	}

	.close {
		@include clay-close($close);
	}
}
