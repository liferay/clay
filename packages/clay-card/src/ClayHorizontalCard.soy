{namespace ClayHorizontalCard}

/**
 * This renders the component's whole content.
 */
{template .render}
	{@param spritemap: string}
	{@param title: string}
	{@param? actionItems: list<[
		href: string,
		label: string,
		separator: bool
	]>}
	{@param? disabled: bool}
	{@param? elementClasses: string}
	{@param? groupName: string}
	{@param? handleItemCheckboxClick_: any}
	{@param? href: string}
	{@param? icon: string}
	{@param? id: string}
	{@param? inputName: string}
	{@param? inputValue: string}
	{@param? selectable: bool}
	{@param? selected: bool}

	{let $attributes kind="attributes"}
		class="card-type-directory
			{if $selectable}
				{sp}form-check form-check-card form-check-middle-left
			{else}
				{sp}card card-horizontal
			{/if}

			{if $elementClasses}
				{sp}{$elementClasses}
			{/if}
		"

		{if $id}
			id="{$id}"
		{/if}
	{/let}

	{let $descriptiveArea kind="html"}
		{call .descriptiveArea}
			{param actionItems: $actionItems /}
			{param href: $href /}
			{param icon: $icon /}
			{param spritemap: $spritemap /}
			{param title: $title /}
		{/call}
	{/let}

	<div {$attributes}>
		{if $selectable}
			{call ClayCheckbox.render}
				{param ariaLabelledBy: $groupName ? 'group-' + $groupName : null /}
				{param checked: $selected /}
				{param disabled: $disabled /}
				{param events: ['change': $handleItemCheckboxClick_] /}
				{param labelContent kind="html"}
					<div class="card card-horizontal">
						{$descriptiveArea}
					</div>
				{/param}

				{param name: $inputName /}
				{param value: $inputValue /}
			{/call}
		{else}
			{$descriptiveArea}
		{/if}
	</div>
{/template}

/**
 * The content the element.
 */
{template .descriptiveArea}
	{@param spritemap: string}
	{@param title: string}
	{@param? actionItems: list<[
		href: string,
		label: string,
		separator: bool
	]>}
	{@param? href: string}
	{@param? icon: string}

	<div class="card-body">
		<div class="card-row">
			{let $classesDescription kind="text"}
				autofit-col autofit-col-expand autofit-col-gutters
			{/let}

			<div class="autofit-col">
				{call ClaySticker.render}
					{param icon: $icon ?: 'folder' /}
					{param spritemap: $spritemap /}
					{param style: 'unstyled' /}
				{/call}
			</div>

			<div class="{$classesDescription}">
				{if $href}
					{call ClayLink.render}
						{param elementClasses: 'card-title text-truncate' /}
						{param href: $href /}
						{param label: $title /}
					{/call}
				{else}
					<div class="card-title text-truncate">{$title}</div>
				{/if}
			</div>

			{if $actionItems}
				<div class="autofit-col">
					{call ClayActionsDropdown.render}
						{param items: $actionItems /}
						{param spritemap: $spritemap /}
					{/call}
				</div>
			{/if}
		</div>
	</div>
{/template}
