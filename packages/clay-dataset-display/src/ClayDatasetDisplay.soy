{namespace ClayDatasetDisplay}

/**
 * This renders the component's whole content.
 */
{template .render}
	{@param spritemap: string}
	{@param? actionItems: list<[
		disabled: bool,
		href: string,
		icon: string,
		label: string,
		quickAction: bool,
		separator: bool,
		type: string
	]>}
	{@param? creationMenu: bool|string|[
		button: ?,
		caption: string,
		helpText: string,
		items: list<[
			disabled: bool,
			href: string,
			icon: string,
			label: string,
			quickAction: bool,
			separator: bool,
			type: string
		]>
	]}
	{@param? elementClasses: string}
	{@param? filterItems: list<[
		checked: bool,
		disabled: bool,
		inputName: string,
		inputValue: string,
		label: string,
		separator: bool,
		type: string
	]>}
	{@param? handleActionClicked_: any}
	{@param? handleCreationButtonClicked_: any}
	{@param? handleDeselectAllClicked_: any}
	{@param? handleFilterDoneClicked_: any}
	{@param? handleItemToggled_: any}
	{@param? handleSearch_: any}
	{@param? handleSelectAllClicked_: any}
	{@param? handleSelectPageCheckboxChanged_: any}
	{@param? handleSortingButtonClicked_: any}
	{@param? handleViewTypeClicked_: any}
	{@param? hideFiltersDoneButton: bool}
	{@param? id: string}
	{@param? items: ?}
	{@param? searchActionURL: string}
	{@param? searchFormName: string}
	{@param? searchInputName: string}
	{@param? selectable: bool}
	{@param? selectedItems_: list<?>}
	{@param? selectedView: int}
	{@param? sortingOrder: string}
	{@param? title: string}
	{@param? totalItems_: number}
	{@param? views: list<[
		active: bool,
		contentRenderer: string,
		disabled: bool,
		icon: string,
		label: string,
		schema: ?
	]>}

	{let $attributes kind="attributes"}
		class="clay-dataset-display
			{if $elementClasses}
				{sp}{$elementClasses}
			{/if}
		"

		{if $id}
			id="{$id}"
		{/if}
	{/let}

	<div {$attributes}>
		{if $items}
			{call ClayManagementToolbar.render}
				{param actionItems: $actionItems /}
				{param creationMenu: $creationMenu /}
				{param events: [
					'actionClicked': $handleActionClicked_,
					'creationButtonClicked': $handleCreationButtonClicked_,
					'deselectAllClicked': $handleDeselectAllClicked_,
					'filterDoneClicked': $handleFilterDoneClicked_,
					'search': $handleSearch_,
					'selectAllClicked': $handleSelectAllClicked_,
					'selectPageCheckboxChanged': $handleSelectPageCheckboxChanged_,
					'sortingButtonClicked': $handleSortingButtonClicked_,
					'viewTypeClicked': $handleViewTypeClicked_
				] /}
				{param filterItems: $filterItems /}
				{param hideFiltersDoneButton: $hideFiltersDoneButton /}
				{param ref: 'managementToolbar' /}
				{param searchActionURL: $searchActionURL /}
				{param searchFormName: $searchFormName /}
				{param searchInputName: $searchInputName /}
				{param selectable: $selectable /}
				{param selectedItems: $selectedItems_ ? length($selectedItems_) : 0 /}
				{param sortingOrder: $sortingOrder /}
				{param spritemap: $spritemap /}
				{param totalItems: $totalItems_ /}
				{param viewTypes: $views /}
			{/call}

			{if $views and isNonnull($selectedView)}
				{let $variant: $views[$selectedView].contentRenderer ?: '' /}

				{delcall ClayDatasetDisplay.List variant="$variant"}
					{param handleItemToggled_: $handleItemToggled_ /}
					{param items: $items /}
					{param schema: $views[$selectedView].schema /}
					{param selectable: $selectable /}
					{param spritemap: $spritemap /}
					{param title: $title /}
				{/delcall}
			{/if}
		{/if}
	</div>
{/template}

/**
 * Default ClayDatasetDisplay.List implementation. This implementation serves
 * as a mere placeholder for the incr-dom compiler. Tools are expected to
 * provide their own ClayDatasetDisplay.List implementation to activate their
 * UIs and components.
 */
{deltemplate ClayDatasetDisplay.List}
	{@param handleItemToggled_: any}
	{@param items: ?}
	{@param schema: ?}
	{@param spritemap: string}
	{@param? selectable: bool}
	{@param? title: string}
{/deltemplate}

/**
 * This renders a ClayCardGrid
 */
{deltemplate ClayDatasetDisplay.List variant="'cards'"}
	{@param handleItemToggled_: any}
	{@param items: ?}
	{@param schema: ?}
	{@param spritemap: string}
	{@param? selectable: bool}
	{@param? title: string}

	<div class="container container-view">
		<form>
			{call ClayCardGrid.render}
				{param events: ['itemToggled': $handleItemToggled_ ] /}
				{param items: $items /}
				{param schema: $schema /}
				{param selectable: $selectable /}
				{param spritemap: $spritemap /}
			{/call}
		</form>
	</div>
{/deltemplate}

/**
 * This renders a ClayList
 */
{deltemplate ClayDatasetDisplay.List variant="'list'"}
	{@param handleItemToggled_: any}
	{@param items: ?}
	{@param schema: ?}
	{@param spritemap: string}
	{@param? selectable: bool}
	{@param? title: string}

	<div class="container container-view">
		<form>
			{call ClayList.render}
				{param events: ['itemToggled': $handleItemToggled_ ] /}
				{param items: $items /}
				{param schema: $schema /}
				{param selectable: $selectable /}
				{param spritemap: $spritemap /}
			{/call}
		</form>
	</div>
{/deltemplate}

/**
 * This renders a ClayTable
 */
{deltemplate ClayDatasetDisplay.List variant="'table'"}
	{@param handleItemToggled_: any}
	{@param items: ?}
	{@param schema: ?}
	{@param spritemap: string}
	{@param? selectable: bool}
	{@param? title: string}

	<div class="container container-no-gutters-sm-down container-view">
		<form>
			{call ClayTable.render}
				{param events: ['itemToggled': $handleItemToggled_ ] /}
				{param items: $items /}
				{param schema: $schema /}
				{param selectable: $selectable /}
				{param spritemap: $spritemap /}
			{/call}
		</form>
	</div>
{/deltemplate}
