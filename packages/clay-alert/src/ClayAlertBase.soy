{namespace ClayAlertBase}

/**
 * This renders the component's whole content.
 */
{template .render}
	{@param message: html|string}
	{@param spritemap: string}
	{@param title: string}
	{@param? _handleCloseClick: any}
	{@param? _visible: bool}
	{@param? autoClose: any}
	{@param? closeable: bool}
	{@param? elementClasses: string}
	{@param? id: string}
	{@param? style: string}
	{@param? type: string}

	{let $attributes kind="attributes"}
		class="alert alert-{$style ?: 'info'} fade
			{if $closeable}
				{sp}alert-dismissible
			{/if}

			{if $elementClasses}
				{sp}{$elementClasses}
			{/if}

			{if $type == 'stripe'}
				{sp}alert-fluid
			{/if}

			{if $_visible != false}
				{sp}show
			{/if}
		"
		{if $autoClose and ($type == 'stripe' or $type == 'toast') and $_visible}
			data-onmouseover="_handleMouseOver"
			data-onmouseout="_handleMouseOut"
		{/if}

		{if $id}
			id="{$id}"
		{/if}

		role="alert"
	{/let}

	{let $content kind="html"}
		{call .content}
			{param _handleCloseClick: $_handleCloseClick /}
			{param closeable: $closeable /}
			{param message: $message /}
			{param spritemap: $spritemap /}
			{param style: $style /}
			{param title: $title /}
		{/call}
	{/let}

	<div {$attributes}>
		{if $type == 'stripe'}
			<div class="container-fluid container-fluid-max-xl">
				{$content}
			</div>
		{else}
			{$content}
		{/if}
	</div>
{/template}

/**
 * Render an alert content.
 */
{template .content}
	{@param message: html|string}
	{@param spritemap: string}
	{@param title: string}
	{@param? _handleCloseClick: any}
	{@param? closeable: bool}
	{@param? style: string}

	{if $closeable}
		{call ClayButton.render}
			{param ariaLabel kind="text"}
				{msg desc="The word 'Close' used as a verb"}
					close
				{/msg}
			{/param}

			{param elementClasses: 'close' /}
			{param events: [ 'click': $_handleCloseClick ] /}
			{param icon: 'times' /}
			{param iconAlignment: 'right' /}
			{param spritemap: $spritemap /}
			{param style: 'unstyled' /}
			{param type: 'button' /}
		{/call}
	{/if}

	{let $icon kind="text"}
		{switch $style}
			{case 'danger'}
				exclamation-full
			{case 'success'}
				check-circle-full
			{case 'warning'}
				warning-full
			{default}
				info-circle
		{/switch}
	{/let}

	<span class="alert-indicator">
		{call ClayIcon.render}
			{param spritemap: $spritemap /}
			{param symbol: $icon /}
		{/call}
	</span>

	<strong class="lead">
		{$title}:
	</strong>

	{$message}
{/template}
