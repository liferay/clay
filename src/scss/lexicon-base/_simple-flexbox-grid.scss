.flex-container {
	@include display(flex);
	@include flex-direction(row);
	@include flex-flow(row);
	@include flex-wrap(wrap);
}

.flex-container-stacked {
	@include flex-direction(column);
}

.flex-row-vertical {
	@include display(flex);
	@include flex-direction(column);
}

.flex-item-expand {
	@include flex(1);
	@include flex-wrap(wrap);

	min-width: 0;
}

.flex-item-full {
	@include flex(1 100%);
	@include flex-wrap(wrap);

	+ .flex-item-expand {
		@include flex-basis(auto);
	}
}

.flex-item-bottom {
	@include align-self(flex-end);

	// IE10, 11 Hack

	@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
		max-width: 100%;
	}
}

.flex-item-center {
	@include align-self(center);

	// IE10, 11 Hack

	@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
		max-width: 100%;
	}
}

.flex-item-top {
	@include align-self(flex-start);

	// IE10, 11 Hack

	@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
		max-width: 100%;
	}
}

// Stacking Flex Container

.flex-container-stacked-xxs {
	@media screen and (max-width: 479px) {
		@include stack-flex-container;
	}
}

.flex-container-stacked-xs {
	@media screen and (max-width: $screen-xs-max) {
		@include stack-flex-container;
	}
}

.flex-container-stacked-sm {
	@media screen and (max-width: $screen-sm-max) {
		@include stack-flex-container;
	}
}

.flex-container-stacked-md {
	@media screen and (max-width: $screen-md-max) {
		@include stack-flex-container;
	}
}

.flex-container-stacked-lg {
	@media screen and (min-width: $screen-lg-min) {
		@include stack-flex-container;
	}
}

.flex-container-stacked-xs-only {
	@media screen and (min-width: $screen-xs-min) and (max-width: $screen-xs-max) {
		@include stack-flex-container;
	}
}

.flex-container-stacked-sm-only {
	@media screen and (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
		@include stack-flex-container;
	}
}

.flex-container-stacked-md-only {
	@media screen and (min-width: $screen-md-min) and (max-width: $screen-md-max) {
		@include stack-flex-container;
	}
}

// Flex Item Break

.flex-item-break-xxs {
	@media screen and (max-width: 479px) {
		@include break-flex-item;
	}
}

.flex-item-break-xs {
	@media screen and (max-width: $screen-xs-max) {
		@include break-flex-item;
	}
}

.flex-item-break-sm {
	@media screen and (max-width: $screen-sm-max) {
		@include break-flex-item;
	}
}

.flex-item-break-md {
	@media screen and (max-width: $screen-md-max) {
		@include break-flex-item;
	}
}

.flex-item-break-lg {
	@media screen and (min-width: $screen-lg) {
		@include break-flex-item;
	}
}

.flex-item-break-xs-only {
	@media screen and (min-width: $screen-xs-min) and (max-width: $screen-xs-max) {
		@include break-flex-item;
	}
}

.flex-item-break-sm-only {
	@media screen and (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
		@include break-flex-item;
	}
}

.flex-item-break-md-only {
	@media screen and (min-width: $screen-md-min) and (max-width: $screen-md-max) {
		@include break-flex-item;
	}
}